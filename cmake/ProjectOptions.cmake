option(ISL_LIBCPP "Use libc++ when compiling with clang" OFF)
option(ISL_STRICT_COMPILATION "Enable -Werror strict compilation" OFF)
option(ISL_PRECOMPILED_HEADERS "Use precompiled headers" ON)
option(ISL_ADDRESS_SANITIZER "Use sanitizers" OFF)
option(ISL_THREAD_SANITIZER "Use thread sanitizers" OFF)
option(ISL_ENABLE_IPO "Enable IPO/LTO" OFF)
option(ISL_HARDENING "Enable hardening" OFF)
option(ISL_INCLUDE_TESTS "Include tests?" OFF)
option(ISL_STATIC_LIBRARY "Create static version of library " ${MSVC})
option(ISL_UNITY_BUILD "Use unity build for targets " ON)

message(STATUS "CC " ${CMAKE_C_COMPILER})
message(STATUS "CXX " ${CMAKE_CXX_COMPILER})
message(STATUS "Build type: " ${CMAKE_BUILD_TYPE})
message(STATUS "Strict compilation? " ${ISL_STRICT_COMPILATION})
message(STATUS "Precompiled headers? " ${ISL_PRECOMPILED_HEADERS})
message(STATUS "Static version? " ${ISL_STATIC_LIBRARY})
message(STATUS "Enable hardening?" ${ISL_HARDENING})
message(STATUS "Include tests?" ${ISL_INCLUDE_TESTS})
message(STATUS "Address sanitizer? " ${ISL_ADDRESS_SANITIZER})
message(STATUS "Thread sanitizer? " ${ISL_THREAD_SANITIZER})
message(STATUS "Unity build? " ${ISL_UNITY_BUILD})

if (ISL_HARDENING AND CMAKE_BUILD_TYPE STREQUAL "Debug")
    message(WARNING "Hardening should not be used in debug builds")
endif ()