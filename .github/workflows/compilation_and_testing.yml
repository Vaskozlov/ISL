name: hosted-ninja-vcpkg-cacheoff
on: [ push, workflow_dispatch ]

jobs:
  job:
    name: ${{ matrix.os }}-${{ github.workflow }}
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.docker }}
    strategy:
      fail-fast: false
      matrix:
        name: [ windows-latest, ubuntu-latest-clang ]
        include:
          - name: windows-latest
            os: windows-latest
            vcpkgCommitId: 'c3801cf53c614ffc54c94051d124eba097b057b1'

          - name: ubuntu-latest-clang
            os: ubuntu-latest
            vcpkgCommitId: 'c3801cf53c614ffc54c94051d124eba097b057b1'
            docker: "vaskozlov/gcc-clang-cmake"
            cc: "clang-19"
            cxx: "clang++-19"

    steps:
      - uses: actions/checkout@v4
      - uses: lukka/get-cmake@latest

      - name: Dump the content of $RUNNER_TEMP
        run: find $RUNNER_TEMP
        shell: bash

      - name: Dump the content of $RUNNER_WORKSPACE
        run: find $RUNNER_WORKSPACE
        shell: bash

      - name: Setup vcpkg
        uses: lukka/run-vcpkg@main
        id: runvcpkg
        with:
          vcpkgDirectory: '${{ runner.workspace }}/b/vcpkg'
          vcpkgGitCommitId: '${{ matrix.vcpkgCommitId}}'
          vcpkgJsonGlob: '**/vcpkg.json'

      - name: Prints output of run-vcpkg's action
        run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_DEFAULT_TRIPLET_OUT }}'"

      - name: Run CMake (Linux)
        if: runner.os == 'Linux'
        uses: lukka/run-cmake@v10
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          configurePreset: ninja
          buildPreset: ninja
          testPreset: ninja
          configurePresetAdditionalArgs: "['-DLIBCXX_DIR=/usr']"

      - name: Run CMake (Windows)
        if: runner.os != 'Linux'
        uses: lukka/run-cmake@v10
        with:
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          configurePreset: ninja-multi-vcpkg
          buildPreset: ninja-multi-vcpkg
          testPreset: ninja-multi-vcpkg
